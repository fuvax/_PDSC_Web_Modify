
@{
    ViewBag.Title = "Index";
}

@if ((ViewBag.GetRoles == "Role_US29" || ViewBag.GetRoles == "Role_US30") && (ViewBag.GetMNRoles == "PDSCPAGE003"))
{
    <div class="card-hover-shadow-2x card-border card" style="margin-bottom:35px;">
        <div class="card-header">
            <h3 style="color:black">Stage: Close Project</h3>
        </div>
        <div class="card-body">



            <table id="CloseProject" class="table table-striped table-bordered table-hover" width="100%">
                <thead class="success">
                    <tr>
                        <th>No.</th>
                        <th>Task Name</th>
                        <th>Working Date</th>
                        <th>Result</th>
                        <th>Problem</th>
                        <th>Problem Note</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>

        </div>
    </div>
}
    <a href="@Url.Action("Main", "ProjectUpdateStatus")" class="float pointer" style="color:white;">
        <i class="fas fa-arrow-left B-icon"></i>
    </a>
    <script src="~/ThridParty/Theam/ArchitectUI-Pro/assets/core/jquery.min.js" type="text/javascript"></script>
    <script src="~/lib/datatables.net-bs4/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/moment.js/moment.min.js"></script>
    <script>
	$(document).ready(() =>
	{
        On_Loading();
		Hide_backbtn();
		GetPlateDate();
		GetTable_Prepare();
		lockButton();

	});

	function lockButton() {
		var Stage = '@Session["Stage"]';
        var IsRole = '@Session["GoSubmit"]';

        disable_stage(Stage, IsRole);

	}

	function Edit(TaskCode, taskname)
	{
		//ToTransection
		$.ajax({
			type: "POST",
			url: "/US_CloseProject/ToTransection",
			data: { tranNo: TaskCode, TaskName: taskname },
			dataType: "json",
			success: function (response)
			{
				if (response.result == 'Redirect')
				{
					window.location = response.url;
				}
			},
			failure: function (response) {
			},
			error: function (response) {
			}
		});
	}
	function GetPlateDate()
	{

		$.ajax({
			type: "POST",
			url: "/US_CloseProject/GetPlateDate",
			data: "",
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: function (response)
			{
				@*if (response.length > 0)
				{
					$('#planstart').text(moment(response[0].Plan_Start_Date).format("DD-MMM-YYYY HH:mm"));
					$('#finishdate').text(moment(response[0].Plan_Finish_Date).format("DD-MMM-YYYY HH:mm"));
				}*@

				//Plan_Finish_Date,Percent_Progress
			},
			failure: function (response) {
			},
			error: function (response) {
			}
		});
	}
	function GetTable_Prepare()
	{

		$.ajax({
			type: "POST",
			url: "/US_CloseProject/GetTable_Prepare",
			data: "",
			contentType: "application/json; charset=utf-8",
			dataType: "json",
			success: OnSuccess,
			failure: function (response) {
                Off_Loading();
			},
			error: function (response) {
                Off_Loading();
			}
		});
	}
	function OnSuccess(response)
	{
		var table = $("#CloseProject").DataTable(
			{
				fixedColumns: {
					rightColumns: 1
				},
				scrollX: true,
				searching: false,
				info: true,
				paging: true,
				data: response,
				columns: [
					{
						'data': 'id',
						render: function (data, type, row, meta) {
							return meta.row + meta.settings._iDisplayStart + 1;
						}
					},
					{ 'data': 'Task_Name' },
					{
						data: null,
						render: function (data,type,row)
						{
                            if (moment(data.TT_Working_Date).format("DD-MM-YYYY") == "01-01-9999") {
                                return '<lable class="text-font-12" style="color:red;font-weight:bold;">N/A</lable>';
                            }
                            else {
                                return '<lable class="text-font-12" style="color:red;font-weight:bold;">' + moment(data.TT_Working_Date).format("DD-MMM-YYYY") + '</lable>';
                            }
							//return moment(data.TT_Working_Date).format("DD-MMM-YYYY HH:mm");
						}
					},

					{ 'data': 'Result_Name' },
					{ 'data': 'Problem_Name' },
					{ 'data': 'TT_Problem_Note' },
					{
						data: null,
						render: function (data, type, row) {
							return '<button onclick="Edit(\'' + data.Task_Code + '\',\'' + data.Task_Name + '\');"  class="mb-2 mr-2 btn-icon btn-icon-only btn-shadow btn-outline-2x btn btn-outline-warning">' +
								'<i class="fas fa-pen"></i>' +
								'</button>';
						}
					}


				]
			});
        Off_Loading();
	}
    </script>


